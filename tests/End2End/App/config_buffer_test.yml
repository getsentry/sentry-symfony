sentry:
  dsn: http://public@example.com/sentry/1
  register_error_handler: false
  tracing:
    enabled: true
  options:
    capture_silenced_errors: false
    error_types: E_ALL & ~E_USER_DEPRECATED
    traces_sample_rate: 0
    ignore_exceptions:
      - 'Symfony\Component\HttpKernel\Exception\BadRequestHttpException'
      - 'Symfony\Component\ErrorHandler\Error\FatalError'
      - 'Symfony\Component\Debug\Exception\FatalErrorException'
    ignore_transactions: 'GET tracing_ignored_transaction'
    transport: 'Sentry\SentryBundle\Tests\End2End\StubTransport'


framework:
  router: { resource: "%routing_config_dir%/routing.yml" }
  secret: secret
  test: ~
  annotations: false
  php_errors:
    log: true

services:
  test.hub:
    alias: Sentry\State\HubInterface
    public: true

  Sentry\SentryBundle\Tests\End2End\StubTransport: ~

  Sentry\Monolog\BreadcrumbHandler:
    arguments:
      - '@Sentry\State\HubInterface'
      - !php/const Monolog\Logger::WARNING

  Sentry\SentryBundle\Tests\End2End\App\Controller\MainController:
    autowire: true
    tags:
      - controller.service_arguments

  Sentry\SentryBundle\Tests\End2End\App\Controller\BufferFlushController:
    autowire: true
    tags:
      - controller.service_arguments

  Sentry\SentryBundle\Tests\End2End\App\Command\MainCommand:
    tags: [{ name: 'console.command', command: 'main-command' }]

monolog:
  handlers:
    main:
      type:  stream
      path:  "%kernel.logs_dir%/%kernel.environment%.log"
      level: debug
    sentry:
      type: sentry
      level: warning
      hub_id: 'Sentry\State\HubInterface'
    sentry_breadcrumbs:
      type: service
      name: sentry_breadcrumbs
      id: Sentry\Monolog\BreadcrumbHandler
    sentry_buffer:
      type: buffer
      handler: sentry
      level: notice
      buffer_size: 50
