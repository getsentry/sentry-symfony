name: Continuous Integration

on:
  pull_request: null
  push:
    branches:
      - master
      - develop
      - 3.5.x

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    env:
      SYMFONY_REQUIRE: ${{ matrix.symfony-version }}
    strategy:
      fail-fast: false
      matrix:
        php:
          - '7.2'
          - '7.3'
          - '7.4'
          - '8.0'
          - '8.1'
        symfony-version:
          - 3.4.*
          - 4.4.*
          - 5.2.*
        dependencies:
          - lowest
          - highest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug

      - name: Setup Problem Matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Determine Composer cache directory
        id: composer-cache
        run: echo "::set-output name=directory::$(composer config cache-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.directory }}
          key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php }}-${{ matrix.dependencies }}-composer-

      - name: Remove Symfony Messenger
        run: composer remove --dev symfony/messenger --no-update
        if: matrix.symfony-version == '3.4.*' || matrix.composer_option == '--prefer-lowest'

      - name: Install Symfony Flex
        run: composer global require --no-progress --no-scripts --no-plugins symfony/flex

      - name: Install highest dependencies
        run: composer update --no-progress --no-interaction --prefer-dist
        if: ${{ matrix.dependencies == 'highest' }}

      - name: Install lowest dependencies
        run: composer update --no-progress --no-interaction --prefer-dist --prefer-lowest
        if: ${{ matrix.dependencies == 'lowest' }}

      - name: Run tests
        run: vendor/bin/phpunit --coverage-clover=build/coverage-report.xml

      - name: Upload code coverage
        uses: codecov/codecov-action@v1
        with:
          file: build/coverage-report.xml

  missing-optional-packages-tests:
    name: Tests without optional packages
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php:
          - '7.2'
          - '8.0'
        dependencies:
          - lowest
          - highest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug

      - name: Setup Problem Matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Determine Composer cache directory
        id: composer-cache
        run: echo "::set-output name=directory::$(composer config cache-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.directory }}
          key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php }}-composer-${{ matrix.dependencies }}-

      - name: Remove optional packages
        run: composer remove doctrine/dbal doctrine/doctrine-bundle symfony/messenger symfony/twig-bundle symfony/cache --dev --no-update

      - name: Install highest dependencies
        run: composer update --no-progress --no-interaction --prefer-dist
        if: ${{ matrix.dependencies == 'highest' }}

      - name: Install lowest dependencies
        run: composer update --no-progress --no-interaction --prefer-dist --prefer-lowest
        if: ${{ matrix.dependencies == 'lowest' }}

      - name: Run tests
        run: vendor/bin/phpunit --coverage-clover=build/coverage-report.xml

      - name: Upload code coverage
        uses: codecov/codecov-action@v1
        with:
          file: build/coverage-report.xml
